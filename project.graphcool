# project: cj5uzozhvk2rq0123clix1hs5
# version: 6

type User implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String @isUnique
  password: String
  role: UserRole!
  accessGroups: [AccessGroup!]! @relation(name: "AccessGroupMembers")
  documents: [Document!]! @relation(name: "DocumentOwner")
}

type File implements Node {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  contentType: String!
  name: String!
  secret: String! @isUnique
  size: Int!
  url: String! @isUnique
}

type Project implements Node {
  title: String! @isUnique
  start: DateTime!
  end: DateTime
  createdAt: DateTime!
  id: ID! @isUnique
  updatedAt: DateTime!
}

type Document implements Node {
  id: ID! @isUnique
  content: String!
  published: Boolean!
  title: String!
  accessGroups: [AccessGroup!]! @relation(name: "AccessGroupDocuments")
  owner: [User!]! @relation(name: "DocumentOwner")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AccessGroup implements Node {
  id: ID! @isUnique
  operation: AccessGroupOperation!
  members: [User!]! @relation(name: "AccessGroupMembers")
  documents: [Document!]! @relation(name: "AccessGroupDocuments")
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserRole {
  EDITOR
  MODERATOR
  ADMIN
}

enum AccessGroupOperation {
  READ
  UPDATE
  DELETE
}